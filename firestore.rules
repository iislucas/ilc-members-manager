rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /members/{memberEmail} {
      function isOwner() {
        return request.auth.token.email == memberEmail;
      }
      function isAdmin() {
        return get(/databases/$(database)/documents/members/$(request.auth.token.email)).data.isAdmin == true;
      }
      function isSchoolManager() {
        let userMember = get(/databases/$(database)/documents/members/$(request.auth.token.email)).data;
        let member = get(/databases/$(database)/documents/members/$(memberEmail)).data;
        let school = get(/databases/$(database)/documents/schools/$(member.managingOrgId)).data;
        return userMember.memberId == school.owner || userMember.memberId in school.managers;
      }
      allow read: if isOwner() || isAdmin() || isSchoolManager();
      allow write: if isAdmin() || isSchoolManager();
    }

    match /schools/{schoolId} {
      function isAdmin() {
        return get(/databases/$(database)/documents/members/$(request.auth.token.email)).data.isAdmin == true;
      }
      allow read: if true;
      allow write: if isAdmin();
    }

    match /instructorsPublic/{instructorId} {
      allow read: if true;
      allow write: if false;
    }

    match /schools/{schoolId}/members/{memberId} {
      function isAdmin() {
        return get(/databases/$(database)/documents/members/$(request.auth.token.email)).data.isAdmin == true;
      }
      function isSchoolManager() {
        let member = get(/databases/$(database)/documents/members/$(request.auth.token.email)).data;
        let school = get(/databases/$(database)/documents/schools/$(schoolId)).data;
        return member.memberId == school.owner || member.memberId in school.managers;
      }
      allow read, write: if isAdmin() || isSchoolManager();
    }
  }
}